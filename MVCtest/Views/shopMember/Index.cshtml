
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_shop.cshtml";
}
@using Microsoft.Owin.Security
@model MVCtest.ViewModels.CustomerViewModel
@{

    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
}
<link rel="stylesheet" href="~/Assest/AssestNew/css/login.css">
<link rel="stylesheet" href="~/Assest/AssestNew/css/alert.css">

@*<div class="page-top-info">
    <div class="container">
        <h4>Member Page</h4>
        <div class="site-pagination">
            <a href="/shopIndex/Index2">Home</a> /         
        </div>
    </div>
</div>*@
<section class="product-section">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="login-form">
                    <h3 class="billing-title text-center">Login</h3>
                    <p class="text-center mt-80 mb-40">Welcome back! Sign in to your account </p>
                    <form action="/shopMember/login" method="post">
                        <input type="text" name="Customer_Email" placeholder="Username or Email*" onfocus="this.placeholder=''" onblur="this.placeholder = 'Email address*'" required class="common-input mt-20">
                        <input type="password" name="User_Password" placeholder="Password*" onfocus="this.placeholder=''" onblur="this.placeholder = 'Password*'" required class="common-input mt-20">
                        <button class="view-btn color-2 mt-20 w-100"><span>Login</span></button>
                        @*<div class="mt-20 d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-center"><input type="checkbox" class="pixel-checkbox" id="login-1"><label for="login-1">Remember me</label></div>
                            <a href="#">Lost your password?</a>
                        </div>*@
                    </form>
                    @using (Html.BeginForm("ExternalLogin", "shopMember", new { ReturnUrl = ViewBag.ReturnUrl })) {
                        @Html.AntiForgeryToken()
                        <div id="socialLoginList">
                            <p>
                                @foreach (AuthenticationDescription p in loginProviders) {
                                    <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="使用 @p.Caption 帳戶登入">@p.AuthenticationType</button>
                                }
                            </p>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-6">
                <div class="register-form">
                    <h3 class="billing-title text-center">Register</h3>
                    <p class="text-center mt-40 mb-30">Create your very own account </p>
                    <form action="/shopMember/Index" method="post">
                        <input type="email" name="Customer_Email" placeholder="Email address*" onfocus="this.placeholder=''" onblur="this.placeholder = 'Email address*'" required class="common-input mt-20">
                        <input type="password" name="User_Password" placeholder="Password*" onfocus="this.placeholder=''" onblur="this.placeholder = 'Password*'" required class="common-input mt-20">
                        <input type="text" name="Customer_Name" placeholder="Full name*" onfocus="this.placeholder=''" onblur="this.placeholder = 'Full name*'" required class="common-input mt-20">
                        <input type="text" name="Customer_Phone" placeholder="Phone number*" onfocus="this.placeholder=''" onblur="this.placeholder = 'Phone number*'" required class="common-input mt-20">

                        <button class="view-btn color-2 mt-20 w-100"><span>Register</span></button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    </section>

<script src="~/Assest/AssestNew/js/alert.js"></script>
@if (TempData["message"] != null) {
    <script type="text/javascript">
        var message = @Html.Raw(Json.Encode(TempData["message"]));
        alertify.set({ delay: 3000 });
        alertify.success(message);
        
    </script>
}